#  example taken from
# https://www.digitalocean.com/community/tutorials
#     /how-to-serve-flask-applications-with-gunicorn-and-nginx-on-ubuntu-18-04
#  ubuntu and debian are related

# Note: running gunicorn in this service
[Unit]
Description=System service that runs the water quality map app on 8050
After=network.target


# limit how hard we try to restart failing service 
# see https://ma.ttias.be/auto-restart-crashed-service-systemd/
StartLimitIntervalSec=500
StartLimitBurst=5

[Service]
# id system command used to obtain owner and group info

User=owner
# Group=[owner]  internet suggsets removing this?
WorkingDirectory=/home/owner/ECO_DonC/wq_app_development
Environment="PATH=/home/owner/ECO_DonC/environments/dash_map_01_env/bin"
ExecStart=/home/owner/ECO_DonC/environments/dash_map_01_env/bin/gunicorn -w 4 main:server -b 0.0.0.0:8050


# direct output from the service to go to systemd journal
# refer to: https://unix.stackexchange.com/questions/20399/view-stdout-stderr-of-systemd-service
StandardOutput=journal+console
StandardError=journal+console

# resatrt after failure - see 
Restart=on-failure

[Install]
# tell systemd to start when the regular multi-user system is up and running:

WantedBy=multi-user.target
